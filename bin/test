#!/usr/bin/env bash
# bin/test <build-dir> <env-dir>
set -eo pipefail

echo "---> yamllint check..."



# GET ARGS
BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BUILD_DIR=$1
ENV_DIR=$2


# CREATE THE LAYER DIRECTORY
pythonlayer="$ENV_DIR"/python
mkdir -p "$pythonlayer"

# DOWNLOAD PYTHON
echo "---> Downloading and extracting Python"
python_url=https://s3-external-1.amazonaws.com/heroku-buildpack-python/heroku-20/runtimes/python-3.10.0.tar.gz
wget -q -O - "$python_url" | tar -xzf - -C "$pythonlayer"

# MAKE PYTHON AVAILABLE TO THIS SCRIPT
export PATH="$pythonlayer"/bin:$PATH
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}"$pythonlayer/lib"


wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz
tar zxvf openssl-1.1.1g.tar.gz
cd openssl-1.1.1g
./config --prefix=/app/openssl --openssldir=/app/openssl no-ssl2
make
make install
cd ~
export PATH=$HOME/openssl/bin:$PATH
export LD_LIBRARY_PATH=$HOME/openssl/lib
export LC_ALL="en_US.UTF-8"
export LDFLAGS="-L /app/openssl/lib -Wl,-rpath,/app/openssl/lib"
which openssl

$pythonlayer/configure --with-openssl=/app/openssl

# INSTALL PIP
echo "---> Installing pip"
python -m ensurepip --upgrade

# INSTALL YAMLLINT
echo "---> Installing yamllint"
pip3 install yamllint

# RUN YAMLLINT
echo "---> Validating yaml/yml files"
yamllint -c "$BP_DIR/config/yamllint-config" $BUILD_DIR

echo "---> [success] yaml/yml validation"
